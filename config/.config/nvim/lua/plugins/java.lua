return  {
	-- 'mfussenegger/nvim-jdtls',
	-- config = function()
	-- 	local jdtls_ok, jdtls = pcall(require, "jdtls")
	--
	-- 	if not jdtls_ok or jdtls == nil then
	-- 		vim.notify("JDTLS not found, install with `:LspInstall jdtls`")
	-- 		return
	-- 	end
	--
	-- 	local JDTLS_LOCATION = vim.fn.stdpath("data") .. "/mason/packages/jdtls"
	--
	-- 	local HOME = os.getenv("HOME")
	--
	-- 	local SYSTEM = "linux"
	-- 	if vim.fn.has("mac") == 1 then
	-- 		SYSTEM = "mac"
	-- 	end
	--
	-- 	local project_name = vim.fn.fnamemodify(vim.fn.getcwd(), ":p:h:t")
	-- 	local WORKSPACE_PATH = HOME .. "/.cache/jdtls/workspace/java/"
	-- 	local workspace_dir = WORKSPACE_PATH .. project_name
	--
	-- 	local root_markers = { ".git", "mvnw", "gradlew", "pom.xml", "build.gradle", "build.gradle.kts" }
	--
	-- 	local extendedClientCapabilities = jdtls.extendedClientCapabilities
	-- 	extendedClientCapabilities.resolveAdditionalTextEditsSupport = true
	--
	-- 	local capabilities = require("cmp_nvim_lsp").default_capabilities()
	--
	-- 	local config = {
	-- 	  -- The command that starts the language server
	-- 	  -- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line
	-- 	  cmd = {
	-- 		'java',
	-- 		'-Declipse.application=org.eclipse.jdt.ls.core.id1',
	-- 		'-Dosgi.bundles.defaultStartLevel=4',
	-- 		'-Declipse.product=org.eclipse.jdt.ls.core.product',
	-- 		'-Dlog.protocol=true',
	-- 		'-Dlog.level=ALL',
	-- 		'-Xmx1g',
	-- 		'--add-modules=ALL-SYSTEM',
	-- 		'--add-opens', 'java.base/java.util=ALL-UNNAMED',
	-- 		'--add-opens', 'java.base/java.lang=ALL-UNNAMED',
	--
	-- 		'-jar', vim.fn.glob(JDTLS_LOCATION .. '/plugins/org.eclipse.equinox.launcher_*.jar'),
	-- 		'-configuration', JDTLS_LOCATION .. '/config_' .. SYSTEM,
	-- 		'-data', workspace_dir
	-- 	  },
	--
	-- 	  capabilities = capabilities,
	-- 	  root_dir = vim.fs.dirname(vim.fs.find(root_markers, { upward = true })[1]),
	--
	--
	-- 	  -- Here you can configure eclipse.jdt.ls specific settings
	-- 	  -- See https://github.com/eclipse/eclipse.jdt.ls/wiki/Running-the-JAVA-LS-server-from-the-command-line#initialize-request
	-- 	  -- for a list of options
	-- 	  settings = {
	-- 		java = {
	-- 		}
	-- 	  },
	--
	-- 	  -- Language server `initializationOptions`
	-- 	  -- You need to extend the `bundles` with paths to jar files
	-- 	  -- if you want to use additional eclipse.jdt.ls plugins.
	-- 	  --
	-- 	  -- See https://github.com/mfussenegger/nvim-jdtls#java-debug-installation
	-- 	  --
	-- 	  -- If you don't plan on using the debugger or other eclipse.jdt.ls plugins you can remove this
	-- 	  init_options = {
	-- 		bundles = {}
	-- 	  },
	-- 	}
	-- 	-- This starts a new client & server,
	-- 	-- or attaches to an existing client & server depending on the `root_dir`.
	-- 	require('jdtls').start_or_attach(config)
	--
	-- end
}
